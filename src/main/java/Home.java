/*

- Refrences:

* For Encryption & Decryption:
    [1] T. Richardson and C. Thies, Secure software design. Burlington, Mass.: Jones & Bartlett Learning, 2013.
    
* For GUI
    [JFrame Method] Alert Message:
    [2] "How to present a simple alert message in java?", Stack Overflow, 2019. [Online]. Available: https://stackoverflow.com/questions/9119481/how-to-present-a-simple-alert-message-in-java.
    
* Methods:
    [method] Contains(String s):
    [3]"Java String contains() method with example - GeeksforGeeks", GeeksforGeeks, 2019. [Online]. Available: https://www.geeksforgeeks.org/java-string-contains-method-example/.
    
    [method] non English:
    [4]"java regex to filter out non-English text", Stack Overflow, 2019. [Online]. Available: https://stackoverflow.com/questions/6204562/java-regex-to-filter-out-non-english-text.
    [5]"Uses of Class java.nio.charset.CharsetEncoder (Java Platform SE 7 )", Docs.oracle.com, 2019. [Online]. Available: https://docs.oracle.com/javase/7/docs/api/java/nio/charset/class-use/CharsetEncoder.html.    [method] Clipboard functions (Copy & Paste)

    [Method] Copy & Paste:
    [6]"Copying text to the clipboard using Java", Stack Overflow, 2019. [Online]. Available: https://stackoverflow.com/questions/6710350/copying-text-to-the-clipboard-using-java.    http://www.java2s.com/Book/Java/Examples/Copy_and_paste_string_to_and_from_System_Clipboard.htm
    [7]"Copy and paste string to and from System Clipboard Java Book", Java2s.com, 2019. [Online]. Available: http://www.java2s.com/Book/Java/Examples/Copy_and_paste_string_to_and_from_System_Clipboard.htm.

* Pictures:
    [8] Copy Icon Png #226974 by Free Icons Library.
    [9] Paste By Arthur Shlain.
    [10] Clear Icon by PNGTree
    [11] Data Encryption free icon by flaticon
    
    
    
    

 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.datatransfer.*;
import java.awt.Toolkit; 
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import java.io.IOException;
import java.nio.charset.CharsetEncoder;
import java.nio.charset.*;

public class Home extends javax.swing.JFrame {
Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
    /**
     * Creates new form NewJFrame
     */
    public Home() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuItem1 = new javax.swing.JMenuItem();
        pasteButton1 = new javax.swing.JButton();
        copyButton1 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        EButton = new javax.swing.JButton();
        copyButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ClearInput = new javax.swing.JTextArea();
        Clear = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        CipherOutput = new javax.swing.JTextArea();
        pasteButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        DButton = new javax.swing.JButton();
        pasteButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        CipherInput = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        ClearOutput = new javax.swing.JTextArea();
        CipherClear = new javax.swing.JButton();
        copyButton2 = new javax.swing.JButton();

        jPasswordField1.setText("jPasswordField1");

        jPasswordField2.setText("jPasswordField2");

        jLabel7.setText("jLabel7");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Cleartext");

        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel2.setText("Ciphertext");

        jMenuItem1.setText("jMenuItem1");

        pasteButton1.setIcon(new javax.swing.ImageIcon("/Users/heila/Downloads/104318-200-2.png")); // NOI18N
        pasteButton1.setMaximumSize(new java.awt.Dimension(42, 42));
        pasteButton1.setMinimumSize(new java.awt.Dimension(42, 42));

        copyButton1.setIcon(new javax.swing.ImageIcon("/Users/heila/Downloads/copy-icon-png-3.jpg-2.png")); // NOI18N
        copyButton1.setMaximumSize(new java.awt.Dimension(42, 42));
        copyButton1.setMinimumSize(new java.awt.Dimension(42, 42));
        copyButton1.setPreferredSize(new java.awt.Dimension(45, 50));
        copyButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButton1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane2.setMaximumSize(new java.awt.Dimension(766, 471));
        jTabbedPane2.setMinimumSize(new java.awt.Dimension(766, 471));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setText("Ciphertext");

        jLabel10.setText("Cleartext");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        EButton.setBackground(new java.awt.Color(255, 255, 255));
        EButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/13103418_data-encryption-2-2.png"))); // NOI18N
        EButton.setToolTipText("Encrypt");
        EButton.setMaximumSize(new java.awt.Dimension(42, 42));
        EButton.setMinimumSize(new java.awt.Dimension(42, 42));
        EButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EButtonActionPerformed(evt);
            }
        });

        copyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/copy-icon-png-3.jpg-2.png"))); // NOI18N
        copyButton.setToolTipText("Copy Output");
        copyButton.setMaximumSize(new java.awt.Dimension(42, 42));
        copyButton.setMinimumSize(new java.awt.Dimension(42, 42));
        copyButton.setPreferredSize(new java.awt.Dimension(45, 50));
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });

        ClearInput.setColumns(20);
        ClearInput.setLineWrap(true);
        ClearInput.setRows(5);
        ClearInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        ClearInput.setDragEnabled(false);
        jScrollPane3.setViewportView(ClearInput);

        Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear_1287085-2.png"))); // NOI18N
        Clear.setToolTipText("Clear");
        Clear.setMaximumSize(new java.awt.Dimension(42, 42));
        Clear.setMinimumSize(new java.awt.Dimension(42, 42));
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        CipherOutput.setEditable(false);
        CipherOutput.setColumns(20);
        CipherOutput.setLineWrap(true);
        CipherOutput.setRows(5);
        CipherOutput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jScrollPane5.setViewportView(CipherOutput);

        pasteButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/104318-200-2.png"))); // NOI18N
        pasteButton2.setToolTipText("Paste Input");
        pasteButton2.setMaximumSize(new java.awt.Dimension(45, 45));
        pasteButton2.setMinimumSize(new java.awt.Dimension(45, 45));
        pasteButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(EButton, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                    .addComponent(copyButton, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                    .addComponent(pasteButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                    .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(EButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(copyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pasteButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 14, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(275, 275, 275))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Encrypt", jPanel1);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setText("Cleartext");

        jLabel11.setText("Ciphertext");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        DButton.setBackground(new java.awt.Color(255, 255, 255));
        DButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/data-encryption-4.png"))); // NOI18N
        DButton.setToolTipText("Decrypt");
        DButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DButtonActionPerformed(evt);
            }
        });

        pasteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/104318-200-2.png"))); // NOI18N
        pasteButton.setToolTipText("Paste Input");
        pasteButton.setMaximumSize(new java.awt.Dimension(42, 42));
        pasteButton.setMinimumSize(new java.awt.Dimension(42, 42));
        pasteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteButtonActionPerformed(evt);
            }
        });

        CipherInput.setColumns(20);
        CipherInput.setLineWrap(true);
        CipherInput.setRows(5);
        CipherInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        CipherInput.setDragEnabled(false);
        jScrollPane4.setViewportView(CipherInput);

        ClearOutput.setColumns(20);
        ClearOutput.setLineWrap(true);
        ClearOutput.setRows(5);
        ClearOutput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jScrollPane6.setViewportView(ClearOutput);

        CipherClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear_1287085-2.png"))); // NOI18N
        CipherClear.setToolTipText("Clear");
        CipherClear.setMaximumSize(new java.awt.Dimension(45, 45));
        CipherClear.setMinimumSize(new java.awt.Dimension(45, 45));
        CipherClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CipherClearActionPerformed(evt);
            }
        });

        copyButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/copy-icon-png-3.jpg-2.png"))); // NOI18N
        copyButton2.setToolTipText("Copy Output");
        copyButton2.setMaximumSize(new java.awt.Dimension(42, 42));
        copyButton2.setMinimumSize(new java.awt.Dimension(42, 42));
        copyButton2.setPreferredSize(new java.awt.Dimension(45, 50));
        copyButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DButton, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(pasteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(CipherClear, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(copyButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(DButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(copyButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pasteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CipherClear, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(275, 275, 275))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 246, Short.MAX_VALUE)
                .addGap(68, 68, 68))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 63, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Decrypt", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 766, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EButtonActionPerformed
        // TODO add your handling code here:
        String S = ClearInput.getText();
        if(!ClearInput.getText().equals("")){
            if(ClearInput.getText().contains("*")){
                 JOptionPane.showMessageDialog(null, "Please don't use stars (*) in the text");

            }else{
                if(!isEnglish(S)){
                    JOptionPane.showMessageDialog(null, "Please use English text Only");
                }else{
                    Encrypt En = new Encrypt(S);
                CipherOutput.setText(En.getCipherText());
                }
                
            }
        
       }else{
           JOptionPane.showMessageDialog(null, "Please insert text to be encrypted");
       }
    }//GEN-LAST:event_EButtonActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        ClearInput.setText("");
        CipherOutput.setText("");
    }//GEN-LAST:event_ClearActionPerformed

    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
            
// TODO add your handling code here:
            if(!CipherOutput.getText().equals("")){
                    String ctc = CipherOutput.getText();
    StringSelection stringSelection = new StringSelection(ctc);
    
    clpbrd.setContents(stringSelection, null);
            }
            else{
                JOptionPane.showMessageDialog(null, "Please insert text to be copied");
                
            }
    
            
            
    }//GEN-LAST:event_copyButtonActionPerformed

    private void DButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DButtonActionPerformed
        
        String G = CipherInput.getText();
            
        if(G.equals("")||G.length()==0){
            JOptionPane.showMessageDialog(null, "Please insert text to be decrypted");

            }else{
                if (G.length()%4!=0){
                    JOptionPane.showMessageDialog(null, "Cipher Text cannot be decrypted");
                }
                else{
                    if(!isEnglish(G)){
                        JOptionPane.showMessageDialog(null, "Please Write in English only");
                    }else{
                        Decrypt D = new Decrypt(CipherInput.getText());
                        ClearOutput.setText(D.getClearText());
                    }
             
                    

        }
                
            }
            
        
        
    }//GEN-LAST:event_DButtonActionPerformed

    private void pasteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteButtonActionPerformed
        try{
        Transferable x = clpbrd.getContents(null);
        if(x.isDataFlavorSupported(DataFlavor.stringFlavor)){
            CipherInput.setText(x.getTransferData(DataFlavor
               .stringFlavor)+"");
        }
         } catch (UnsupportedFlavorException | IOException ex) {
          JOptionPane.showMessageDialog(null, "a problem happened, please retry again later");
      }
    }//GEN-LAST:event_pasteButtonActionPerformed

    private void CipherClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CipherClearActionPerformed
        // TODO add your handling code here:
        CipherInput.setText("");
        ClearOutput.setText("");
    }//GEN-LAST:event_CipherClearActionPerformed

    private void pasteButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteButton2ActionPerformed
        try{
        Transferable x = clpbrd.getContents(null);
        if(x.isDataFlavorSupported(DataFlavor.stringFlavor)){
            ClearInput.setText(x.getTransferData(DataFlavor
               .stringFlavor)+"");
        }
         } catch (UnsupportedFlavorException | IOException ex) {
          JOptionPane.showMessageDialog(null, "a problem happened, please retry again later");;
      }
    }//GEN-LAST:event_pasteButton2ActionPerformed

    private void copyButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copyButton1ActionPerformed

    private void copyButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copyButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CipherClear;
    private javax.swing.JTextArea CipherInput;
    private javax.swing.JTextArea CipherOutput;
    private javax.swing.JButton Clear;
    private javax.swing.JTextArea ClearInput;
    private javax.swing.JTextArea ClearOutput;
    private javax.swing.JButton DButton;
    private javax.swing.JButton EButton;
    private javax.swing.JButton copyButton;
    private javax.swing.JButton copyButton1;
    private javax.swing.JButton copyButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton pasteButton;
    private javax.swing.JButton pasteButton1;
    private javax.swing.JButton pasteButton2;
    // End of variables declaration//GEN-END:variables

      private static boolean isEnglish(String text) {
        CharsetEncoder asciiEncoder = Charset.forName("US-ASCII").newEncoder();
        CharsetEncoder isoEncoder = Charset.forName("ISO-8859-1").newEncoder();
        return  asciiEncoder.canEncode(text) || isoEncoder.canEncode(text);
    }




}




